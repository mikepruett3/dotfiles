---
- name: Local Machine Bootstrap
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  no_log: false


  tasks:
    - name: "Get the Running User"
      ansible.builtin.set_fact:
        regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: "Set fact for architecture (x86_64)"
      ansible.builtin.set_fact:
        architecture: "amd64"
      when:
        - ansible_facts['architecture'] == "x86_64"

    - name: "Set fact for architecture (i386)"
      ansible.builtin.set_fact:
        architecture: "i386"
      when:
        - ansible_facts['architecture'] == "i386"

    - name: "Kill running Vesktop client"
      ansible.builtin.shell:
        cmd: killall --regexp vesktop
      become: true
      become_user: '{{ regular_user }}'
      ignore_errors: true

    - name: "Get Download link of the latest Vesktop client Debian package"
      ansible.builtin.shell:
        cmd: curl -s https://api.github.com/repos/Vencord/Vesktop/releases/latest | jq --raw-output '.assets[] | select(.name | endswith(".deb")) | .browser_download_url' | grep -v arm64
      register: url
      when:
        - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Download and Install the Vesktop client (apt)"
      ansible.builtin.apt:
        deb: "{{ url.stdout | string }}"
        state: present
      when:
        - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Kill running YouTube-Desktop client"
      ansible.builtin.shell:
        cmd: killall --regexp youtube-desktop
      become: true
      become_user: '{{ regular_user }}'
      ignore_errors: true

    - name: "Get Download link of the latest YouTube-Desktop AppImage client"
      ansible.builtin.shell:
        cmd: curl -s https://api.github.com/repos/mikepruett3/youtube-desktop/releases/latest | jq --raw-output '.assets[] | select(.name | endswith("AppImage")) | .browser_download_url'
      register: url

    - name: "Download and Install the YouTube-Desktop client"
      ansible.builtin.get_url:
        url: "{{ url.stdout | string }}"
        dest: ~/Apps/YouTube.Desktop.AppImage
        mode: '0755'
      become: true
      become_user: '{{ regular_user }}'

    - name: "Kill running HomeAssistant-Desktop client"
      ansible.builtin.shell:
        cmd: killall --regexp homeassistant-desktop
      become: true
      become_user: '{{ regular_user }}'
      ignore_errors: true

    - name: "Get Download link of the latest HomeAssistant-Desktop AppImage client"
      ansible.builtin.shell:
        cmd: curl -s https://api.github.com/repos/mikepruett3/homeassistant-desktop/releases/latest | jq --raw-output '.assets[] | select(.name | endswith("AppImage")) | .browser_download_url'
      register: url

    - name: "Download and Install the HomeAssistant-Desktop client"
      ansible.builtin.get_url:
        url: "{{ url.stdout | string }}"
        dest: ~/Apps/Home.Assistant.Desktop.AppImage
        mode: '0755'
      become: true
      become_user: '{{ regular_user }}'

    - name: "Kill running Obsidian client"
      ansible.builtin.shell:
        cmd: killall --regexp obsidian
      become: true
      become_user: '{{ regular_user }}'
      ignore_errors: true

    - name: "Get Download link of the latest Obsidian client"
      ansible.builtin.shell:
        cmd: curl -s https://api.github.com/repos/obsidianmd/obsidian-releases/releases/latest | jq --raw-output '.assets[] | select(.name | endswith("AppImage")) | .browser_download_url' | grep -v arm64
      register: url

    - name: "Download and Install the Obsidian client"
      ansible.builtin.get_url:
        url: "{{ url.stdout | string }}"
        dest: ~/Apps/Obsidian.AppImage
        mode: '0755'
      become: true
      become_user: '{{ regular_user }}'

    - name: "Kill running Plexamp client"
      ansible.builtin.shell:
        cmd: killall --regexp plexamp
      become: true
      become_user: '{{ regular_user }}'
      ignore_errors: true

    - name: "Download and Install the Plexamp client"
      ansible.builtin.get_url:
        url: "https://plexamp.plex.tv/plexamp.plex.tv/desktop/Plexamp-4.11.5.AppImage"
        dest: ~/Apps/Plexamp.AppImage
        mode: '0755'
      become: true
      become_user: '{{ regular_user }}'

    - name: "Download and Install the minio client"
      ansible.builtin.get_url:
        url: "https://dl.minio.io/client/mc/release/{{ ansible_facts['system'] | lower }}-{{ architecture | lower }}/mc"
        dest: ~/bin/
        mode: '0750'
      become: true
      become_user: '{{ regular_user }}'

    - name: "Force an update to the xdg-desktop-menu"
      ansible.builtin.shell:
        cmd: xdg-desktop-menu forceupdate
      become: true
      become_user: '{{ regular_user }}'
