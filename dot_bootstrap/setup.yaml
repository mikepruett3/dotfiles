---
- name: Local Machine Bootstrap
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  no_log: false

  #vars:
  #  flyctl_version: "0.1.130"

  tasks:
    - name: "Get the Running User"
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: "Set fact for architecture (x86_64)"
      ansible.builtin.set_fact:
        architecture: "amd64"
      when:
        - ansible_facts['architecture'] == "x86_64"

    - name: "Set fact for architecture (i386)"
      ansible.builtin.set_fact:
        architecture: "i386"
      when:
        - ansible_facts['architecture'] == "i386"

    - name: "Make local .ssh directory"
      ansible.builtin.file:
        path: ~/.ssh/
        state: directory
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Make local font directory"
      ansible.builtin.file:
        path: ~/.local/share/fonts/
        state: directory
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Copy the font to ~/.local/share/fonts"
      ansible.builtin.copy:
        src: ~/.local/share/chezmoi/fonts/
        dest: ~/.local/share/fonts/
        remote_src: yes
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Install packages (dnf)"
      ansible.builtin.dnf:
        name:
          - bat
          - curl
          - dos2unix
          - eza
          - fontconfig
          - fzf
          - git
          - glow
          - golang
          - gpg
          - htop
          #- lf
          - mediainfo
          - neovim
          - pydf
          - poppler-utils
          - 7zip
          - unrar
          - unzip
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'dnf'

    # Based on https://www.jeffgeerling.com/blog/2022/aptkey-deprecated-debianubuntu-how-fix-ansible
    - name: "Download Charm.sh Keyring"
      ansible.builtin.get_url:
        url: https://repo.charm.sh/apt/gpg.key
        dest: /etc/apt/trusted.gpg.d/charm.asc
        force: true
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Add the Charm.sh Repository"
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/charm.asc] https://repo.charm.sh/apt/ * *"
        filename: charm
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Download eza Keyring"
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
        dest: /etc/apt/trusted.gpg.d/gierens.asc
        force: true
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Add the eza Repository"
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/gierens.asc] http://deb.gierens.de stable main"
        filename: eza
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Download tailscale Keyring"
      ansible.builtin.get_url:
        url: https://pkgs.tailscale.com/stable/debian/bookworm.noarmor.gpg
        dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
        force: true
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Add the tailscale Repository"
      ansible.builtin.get_url:
        url: https://pkgs.tailscale.com/stable/debian/bookworm.tailscale-keyring.list
        dest: /etc/apt/sources.list.d/tailscale.list
        force: true
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Download mullvad Keyring"
      ansible.builtin.get_url:
        url: https://repository.mullvad.net/deb/mullvad-keyring.asc
        dest: /usr/share/keyrings/mullvad-keyring.asc
        force: true
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Add the mullvad Repository"
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/mullvad-keyring.asc arch=amd64] https://repository.mullvad.net/deb/stable {{ ansible_facts['distribution_release'] }} main"
        filename: mullvad
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Install packages (apt)"
      ansible.builtin.apt:
        name:
          - bat
          - curl
          - dos2unix
          - eza
          - fontconfig
          - fzf
          - git
          - glow
          - golang-go
          - gpg
          - htop
          #- lf
          - mediainfo
          - mullvad-browser
          - neovim
          - pydf
          - poppler-utils
          - 7zip
          #- tailscale
          - unrar-free
          - unzip
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Install packages (brew)"
      community.general.homebrew:
        name:
          - bat
          - curl
          - dos2unix
          - eza
          - fontconfig
          - fzf
          - git
          - glow
          - go
          - gpg
          - htop
          #- lf
          - mediainfo
          - neovim
          - pydf
          - poppler
          - 7zip
          - rar
          - unzip
        state: present
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
         - ansible_facts['pkg_mgr'] == 'homebrew'

    - name: "Install packages (pacman)"
      community.general.pacman:
        name:
          - bat
          - curl
          - dos2unix
          - eza
          - fontconfig
          - fzf
          - git
          - glow
          - go
          - gnupg
          - htop
          #- lf
          - mediainfo
          - neovim
          - pydf
          - poppler
          - p7zip
          - tailscale
          - unrar-free
          - unzip
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'pacman'

    - name: "Install Yay Package Manager"
      ansible.builtin.include_role:
        name: jahrik.yay
      vars:
        install: true
      when:
         - ansible_facts['pkg_mgr'] == 'pacman'

    - name: "Update the font information cache files"
      ansible.builtin.shell:
        cmd: fc-cache

    - name: "Checkout kurzit from Github"
      ansible.builtin.git:
        repo: https://github.com/mikepruett3/kurzit.git
        dest: ~/.kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Make kurzit executable"
      ansible.builtin.file:
        path: ~/.kurzit/kurzit
        mode: '0750'
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Run the kurzit executable"
      ansible.builtin.shell:
        cmd: ~/.kurzit/kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'

    #- name: "Install golang"
    #  ansible.builtin.include_role:
    #    name: fubarhouse.golang

    - name: "Install Visual Studio Code"
      ansible.builtin.include_role:
        #name: gantsign.visual-studio-code
        name: ansible-role-visual-studio-code
      when:
         - ansible_facts['pkg_mgr'] != 'pacman'

    - name: "Install Visual Studio Code (yay)"
      ansible.builtin.include_role:
        name: jahrik.yay
      vars:
        aur_packages:
          - visual-studio-code-bin
      when:
         - ansible_facts['pkg_mgr'] == 'pacman'

    - name: "Install Starship Cross-Shell Prompt"
      ansible.builtin.include_role:
        name: andrewrothstein.starship

    - name: "Install ansiart2utf8 go packages"
      ansible.builtin.shell:
        cmd: go install github.com/BourgeoisBear/ansiart2utf8/ansiart2utf8@latest
      environment:
        GOBIN: "/usr/local/bin"

    - name: "Install ascii-image-converter go packages"
      ansible.builtin.shell:
        cmd: go install github.com/TheZoraiz/ascii-image-converter@latest
      environment:
        GOBIN: "/usr/local/bin"

    - name: "Install go-launcher go packages"
      ansible.builtin.shell:
        cmd: go install github.com/mikepruett3/go-launcher@latest
      environment:
        GOBIN: "/usr/local/bin"

    - name: "Install imgconv go packages"
      ansible.builtin.shell:
        cmd: go install github.com/mikepruett3/imgconv@latest
      environment:
        GOBIN: "/usr/local/bin"

    - name: "Install lf go packages"
      ansible.builtin.shell:
        cmd: go install -ldflags="-s -w" github.com/gokcehan/lf@latest
      environment:
        CGO_ENABLED: "0"
        GOBIN: "/usr/local/bin"

    - name: "Download and Install the minio client"
      ansible.builtin.get_url:
        url: "https://dl.minio.io/client/mc/release/{{ ansible_facts['system'] | lower }}-{{ architecture | lower }}/mc"
        dest: ~/bin/
        mode: '0750'
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Sync minio storage to ~/Images"
      ansible.builtin.shell:
        cmd: ~/bin/mc cp --recursive minio ~/Images/
      become: yes
      become_user: '{{ remote_regular_user }}'
