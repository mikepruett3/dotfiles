---
- name: Local Machine Bootstrap
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  #vars:
  #  flyctl_version: "0.1.130"

  tasks:
    - name: "Get the Running User"
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: "Make local font directory"
      ansible.builtin.file:
        path: ~/.local/share/fonts/
        state: directory
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Copy the font to ~/.local/share/fonts"
      ansible.builtin.copy:
        src: ~/.local/share/chezmoi/fonts/
        dest: ~/.local/share/fonts/
        remote_src: yes
      become: yes
      become_user: '{{ remote_regular_user }}'

    - name: "Install packages (dnf)"
      ansible.builtin.dnf:
        name:
          - git
          - htop
          - vim
          - fzf
          - bat
          - 7zip
          - unrar
          - unzip
          - mediainfo
          - glow
          - poppler-utils
          - golang
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'dnf'

    - name: "Download Charm.sh Keyring"
      ansible.builtin.get_url:
        url: https://repo.charm.sh/apt/gpg.key
        dest: /etc/apt/keyrings/charm.asc
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Add the Charm.sh Repository"
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/charm.asc] https://repo.charm.sh/apt/ * *"
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Download eza Keyring"
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
        dest: /etc/apt/keyrings/gierens.gpg
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Add the eza Repository"
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main"
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Install packages (apt)"
      ansible.builtin.apt:
        name:
          - curl
          - git
          - gpg
          - htop
          - vim
          - fzf
          - eza
          - lf
          - bat
          - pydf
          - 7zip
          - unrar-free
          - unzip
          - mediainfo
          - glow
          - poppler-utils
          - golang-go
          - dos2unix
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Install packages (brew)"
      community.general.homebrew:
        name:
          #- git
          - htop
          - vim
          #- fzf
          - bat
          - 7zip
          - rar
          - unzip
          - mediainfo
          - glow
          - poppler
          - go
        state: present
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
         - ansible_facts['pkg_mgr'] == 'homebrew'

    - name: "Install packages (pacman)"
      community.general.pacman:
        name:
          - git
          - htop
          - neovim
          #- fzf
          - ezaex
          - lf
          - bat
          - p7zip
          - unrar-free
          - unzip
          - mediainfo
          - glow
          - poppler
          - go
        state: present
      #become: yes
      #become_user: '{{ remote_regular_user }}'
      when:
         - ansible_facts['pkg_mgr'] == 'pacman'

    - name: "Checkout kurzit from Github"
      ansible.builtin.git:
        repo: https://github.com/mikepruett3/kurzit.git
        dest: ~/.kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'
      #when:
      #  - ansible_facts['os_family'] != "Darwin"

    - name: "Make kurzit executable"
      ansible.builtin.file:
        path: ~/.kurzit/kurzit
        owner: '{{ remote_regular_user }}'
        group: '{{ remote_regular_user }}'
        mode: '0750'
      become: yes
      become_user: '{{ remote_regular_user }}'
      #when:
      #  - ansible_facts['os_family'] != "Darwin"

    - name: "Run the kurzit executable"
      ansible.builtin.shell:
        cmd: ~/.kurzit/kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'
      #when:
      #  - ansible_facts['os_family'] != "Darwin"

    #- name: "Checkout kurzit from Github (Darwin)"
    #  ansible.builtin.git:
    #    repo: https://github.com/mikepruett3/kurzit.git
    #    dest: /Users/{{ remote_regular_user }}/.kurzit
    #  become: yes
    #  become_user: '{{ remote_regular_user }}'
    #  when:
    #    - ansible_facts['os_family'] == "Darwin"

    #- name: "Make kurzit executable (Darwin)"
    #  ansible.builtin.file:
    #    path: /Users/{{ remote_regular_user }}/.kurzit/kurzit
    #    owner: '{{ remote_regular_user }}'
    #    mode: '0750'
    #  become: yes
    #  become_user: '{{ remote_regular_user }}'
    #  when:
    #    - ansible_facts['os_family'] == "Darwin"

    #- name: "Run the kurzit executable (Darwin)"
    #  ansible.builtin.shell:
    #    cmd: /Users/{{ remote_regular_user }}/.kurzit/kurzit
    #  become: yes
    #  become_user: '{{ remote_regular_user }}'
    #  when:
    #    - ansible_facts['os_family'] == "Darwin"

    #- name: "Install golang"
    #  ansible.builtin.include_role:
    #    name: fubarhouse.golang

    - name: "Install Starship Cross-Shell Prompt"
      ansible.builtin.include_role:
        name: andrewrothstein.starship

    - name: "Install go packages"
      ansible.builtin.shell:
        cmd: go install github.com/BourgeoisBear/ansiart2utf8/ansiart2utf8@latest
      environment:
        GOBIN: "/usr/local/bin"
