---
- name: Local Machine Bootstrap
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  #vars:
  #  flyctl_version: "0.1.130"

  tasks:
    - name: "Get the Running User"
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: "Install packages (dnf)"
      ansible.builtin.dnf:
        name:
          - git
          - htop
          - vim
          - fzf
          - bat
          - 7zip
          - unrar
          - unzip
          - mediainfo
          - glow
          - poppler-utils
          - golang
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'dnf'

    - name: "Download Charm.sh Keyring"
      ansible.builtin.get_url:
        url: https://repo.charm.sh/apt/gpg.key
        dest: /etc/apt/keyrings/charm.asc
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Add the Charm.sh Repository"
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/charm.asc] https://repo.charm.sh/apt/ * *"
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Install packages (apt)"
      ansible.builtin.apt:
        name:
          - git
          - htop
          - vim
          - fzf
          - bat
          - 7zip
          - unrar
          - unzip
          - mediainfo
          - glow
          - poppler-utils
          - golang-go
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'apt'

    - name: "Install packages (brew)"
      ansible.builtin.apt:
        name:
          #- git
          - htop
          - vim
          #- fzf
          - bat
          - 7zip
          - unrar
          - unzip
          - mediainfo
          - glow
          - poppler-utils
          - golang-go
        state: present
      when:
         - ansible_facts['pkg_mgr'] == 'brew'

    - name: "Checkout kurzit from Github (Linux)"
      ansible.builtin.git:
        repo: https://github.com/mikepruett3/kurzit.git
        dest: /home/{{ remote_regular_user }}/.kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
        - ansible_facts['os_family'] != "Darwin"

    - name: "Make kurzit executable (Linux)"
      ansible.builtin.file:
        path: /home/{{ remote_regular_user }}/.kurzit/kurzit
        owner: '{{ remote_regular_user }}'
        group: '{{ remote_regular_user }}'
        mode: '0750'
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
        - ansible_facts['os_family'] != "Darwin"

    - name: "Run the kurzit executable (Linux)"
      ansible.builtin.shell:
        cmd: /home/{{ remote_regular_user }}/.kurzit/kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
        - ansible_facts['os_family'] != "Darwin"

    - name: "Checkout kurzit from Github (Darwin)"
      ansible.builtin.git:
        repo: https://github.com/mikepruett3/kurzit.git
        dest: /Users/{{ remote_regular_user }}/.kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
        - ansible_facts['os_family'] == "Darwin"

    - name: "Make kurzit executable (Darwin)"
      ansible.builtin.file:
        path: /User/{{ remote_regular_user }}/.kurzit/kurzit
        owner: '{{ remote_regular_user }}'
        group: '{{ remote_regular_user }}'
        mode: '0750'
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
        - ansible_facts['os_family'] == "Darwin"

    - name: "Run the kurzit executable (Darwin)"
      ansible.builtin.shell:
        cmd: /User/{{ remote_regular_user }}/.kurzit/kurzit
      become: yes
      become_user: '{{ remote_regular_user }}'
      when:
        - ansible_facts['os_family'] == "Darwin"

    #- name: "Install golang"
    #  ansible.builtin.include_role:
    #    name: fubarhouse.golang

    - name: "Install go packages"
      ansible.builtin.shell:
        cmd: go install github.com/BourgeoisBear/ansiart2utf8/ansiart2utf8@latest
      environment:
        GOBIN: "/usr/local/bin"
